local 攻击速度颜色 = ("26A2DA-101010|25A2DA-101010|27A9E4-101010|2187B5-101010|1D769D-101010|2496C9-101010")
local 卓越一击率颜色 = ("26A2DA-101010|25A2DA-101010|27A9E4-101010|2187B5-101010|1D769D-101010|2496C9-101010")
local 攻击力颜色 = ("26A2DA-101010|25A2DA-101010|27A9E4-101010|2187B5-101010|1D769D-101010|2496C9-101010")
local 最大生命颜色 = ("26A2DA-101010|25A2DA-101010|27A9E4-101010|2187B5-101010|1D769D-101010|2496C9-101010")
local 伤害反射颜色 = ("26A2DA-101010|25A2DA-101010|27A9E4-101010|2187B5-101010|1D769D-101010|2496C9-101010")
local 伤害减少颜色=("26A2DA-101010|25A2DA-101010|27A9E4-101010|2187B5-101010|1D769D-101010|2496C9-101010")
local 防御成功率颜色=("26A2DA-101010|25A2DA-101010|27A9E4-101010|2187B5-101010|1D769D-101010|2496C9-101010")

local jewelry = {"之指环","之项链","之耳环","血色天使","暗黑天使","之翼"}
local dict_files1 = {"zzh.txt","zxl.txt","zeh.txt","s1.txt","s1.txt","s1.txt"}
local color_fmt1 = {"D223B7-101010|A41C8E-101010|B21E9A-101010","D223B7-101010|A41C8E-101010|B41E9C-101010","D223B7-101010|A41C8E-101010|B41E9C-101010","F26055-101010|C64F46-101010|AE463E-101010","C34D44-101010|DD574D-101010|F26055-101010|9A3D36-101010|AD453D-101010","9D8D34-101010|E6CE4A-101010|A09034-101010|CEB943-101010|BCA83D-101010"}
local attribute = {"攻击速度","卓越一击率","攻击力","最大生命","伤害反射","伤害减少","防御成功率"}
local dict_files = {"s1.txt", "s1.txt", "s1.txt", "s1.txt", "s1.txt", "s1.txt", "s1.txt"}
local color_fmt = {攻击速度颜色,卓越一击率颜色,攻击力颜色,最大生命颜色,伤害反射颜色,伤害减少颜色,防御成功率颜色}
local x1, y1, x2, y2 = 774, 183, 1120, 576
local grid_width, grid_height = 40, 40



function tingliu(time)   --随机停留时间tingliu({500,1000}) tingliu({})
	local randomTime = math.random(time[1], time[2])
	sleep(randomTime)
end

function tap_random(x, y, range_percentage, min_duration, max_duration)  --定义随机点击位置和松开时间-tap_random(坐标, 偏移百分比, ,松开时间) tap_random(28, 26,1,300,400)
	local gesture = Gesture:new() -- 创建一个手势对象
	local path = Path:new() -- 创建一条路径
	-- 计算随机偏移的半径
	local range = math.floor(range_percentage * 0.01 * math.min(x, y))
	-- 计算随机的坐标
	local random_x = math.floor(x + 0.5 + math.random(-range, range))
	local random_y = math.floor(y + 0.5 + math.random(-range, range))
	-- 计算随机的按下时间
	local random_duration = math.floor(min_duration + (max_duration - min_duration) * math.random())
	-- 添加按下和松开的路径
	path:setStartTime(0)
	path:setDurTime(random_duration)
	path:addPoint(random_x, random_y)
	gesture:addPath(path)
	
	function onFinishEvent(type) -- 回调函数
	end
	
	local r = gesture:dispatch(onFinishEvent)
	if r then
		print("点击成功")
	else
		print("执行失败")
	end
end

function set_dict_files(index, dict_files)  ---设置字库变量
	setDict(index, dict_files)
	useDict(index)
end

function myFindStr()    ---打开交易行判断交易税是否存在，否则再打开一次
	sleep(1000)      
	tap_random(27, 23,1,200,250)   --点空白地方
	tingliu({1300,1800})
	tap_random(942, 113,2,300,400)  --点交易
	tingliu({1600,2000})
	tap(496,152)                    --点击我的上架
	tingliu({1300,1500})
	
	setDict(0, "s1.txt")
	useDict(0)
	local params = {596,91,691,131,"交易行","E2D3C4-101010|ACA786-101010|C3B6A9-101010|AFAC9B-101010|CABFA3-101010|A49382-101010",0.8}
	local x, y = -1, -1
	ret,x,y = findStr(params[1], params[2], params[3], params[4], params[5], params[6], params[7])
	if x ~= -1 and y ~= -1 then
		print(ret,x,y)
		tingliu({1200,1500})
		return true
	else
		while true do
			ret,x, y = findStr(params[1], params[2], params[3], params[4], params[5], params[6], params[7])
			if x ~= -1 and y ~= -1 then
				return true
			end
			tingliu({500,600})
			tap_random(27, 23,1,200,250)     --点空白地方
			tingliu({1300,1800})
			tap_random(1023,26,1,300,400)    --点切换
			tingliu({1300,1800})
			tap_random(942, 113,2,300,400)   --点交易
			tingliu({1600,2000})
			tap(496,152)                     --点我的上架
			tingliu({1300,1500})
		end
	end
end

function shibiewenzi()     ---识别交易行中的货架数字
	setDict(0,"s1.txt")
	useDict(0)
	local x, y = -1, -1
	local ret, x, y = findStr(481,189,510,219,"s0|s1|s2|s3|s4|s5|s6","C5CACD-101010|808385-101010|A8ABAE-101010|D6DADE-101010",0.8)
	if x ~= -1 and y ~= -1 then
		local num = ret
		print(num)
		return num
	else
		print("识别不了数字，终止")
	end
	
end

function shangjiamoney()   ---上架金币
	tingliu({1000,1300})
	tap_random(817,230,3,250,320)   ---点金币
	tingliu({1200,1400})
	tap_random(817,223,2,250,320)   ---点数量到最低
	tingliu({1200,1400})
	tap(772,348)                    ---点最低价
	tingliu({1200,1400})
	local x=-1
	local y=-1
	ret,x,y=findPic(769,188,972,538,"sj.png|sj1.png|sj2.png|sj3.png","101010",0,0.8)
	if x~=-1 and y ~=-1 then
		print("找到坐标："..x,y)
		tap_random(x,y,2,250,320)
		print(tap_random(x,y))
		print("点上架")
	end
	return true
end

function shangjia(tap_first)  --process_jewelry(i)函数调用专用上架
	local x=-1
	local y=-1
	ret,x,y=findPic(769,188,972,538,"sj.png|sj1.png|sj2.png|sj3.png","101010",0,0.8)
	if x~=-1 and y ~=-1 then
		print("找到坐标："..x,y)
		if tap_first then
			tap_random(x+29,y+13,2,250,320)
			print(tap_random(x,y))
			print("点上架")
		end
		return true
	end
end

function xiajia()  --点下架文字
	for i = 1, 1 do
		setDict(0,"s1.txt")
		useDict(0)
		local x=-1 y=-1
		ret,x,y = findStr(771,184,1123,579,"下架","DADEE2-101010|C9C7C6-101010|B8B5B1-101010|91867D-101010|A9A29B-020202|A6A5A3-050505|A19A94-101010",0.8)
		if x ~= -1 and y ~= -1 then
			print("找到坐标："..x,y)
			tingliu({1300,1800})
			tap_random(x,y,2,300,400)
		else
			print("文字不存在")
		end
	end
	tingliu({1800,2100})
end

function process_jewelry(i)  --循环上架产品
	set_dict_files(i-1, dict_files1[i])
	local x, y = -1, -1
	local ret, x, y = findStr(480,162,686,234, jewelry[i], color_fmt1[i], 0.92)
	if x ~= -1 and y ~= -1 then
		print(jewelry[i].."这是要找的首饰")
		tingliu({1500,1800})
		if jewelry[i] == "之翼" or jewelry[i] == "血色天使" or jewelry[i] == "暗黑天使" then
			local color_found, intX, intY = findColor(410,332,611,577,"1B739A-101010|26A6DF-101010|238DBC-101010|2499CE-101010|1C7196-101010",0,0.9)
			if intX>-1 and intY>-1 then
				local number = getColorNum(410,332,611,577,"1E7CA6-101010|2393C5-101010|259FD6-101010|1D6E93-101010|195E7D-101010",0.8)
				print(number)
				print("找到颜色，坐标为：", intX, intY)
				tingliu({1300,1600})
				tap(770,256)
				tingliu({1400,1800})
				local found = false
				for k = 1, 2 do
					shangjia(k == 1)
					tingliu({3000,3500})
					found = shangjia(false)
					tingliu({300,500})
					if found then
						break
					end
				end
			else
				print("没有找到")
				return found
			end
		else
			local attr_found = false
			for j=1, #attribute do
				set_dict_files(j-1, dict_files[j])
				local x, y = -1, -1
				local ret, x, y = findStr(410,378,595,648, attribute[j], color_fmt[j], 0.92)
				if x ~= -1 and y ~= -1 then
					print(attribute[j].."这是要找的属性")
					tingliu({1500,2000})
					tap(770,256)    ---点击最低价
					tingliu({1500,2000})
					local found = false
					for k = 1, 2 do
						shangjia(k == 1)
						tingliu({3000,3500})
						found = shangjia(false)
						tingliu({300,500})
						if found then
							break
						end
					end
					return found
				end
			end
			if not attr_found then
				print("属性不对")
				tingliu({500,800})
				tap_random(792, 115,5,300,400)
			end
		end
	end
	return false
end

function closeUI(exitScript)   ----ui界面退出
	function onClick()
		exitScript()
	end
	
	ui.newLayout("layout1", 500, 300)
	ui.addButton("layout1", "close_tuichu", "完成退出", 400, 200)
	ui.setTextSize("close_tuichu",20)
	ui.setOnClick("close_tuichu", "onClick()")
	ui.setTextColor("close_tuichu","#ff000000")
	ui.setBackground("close_tuichu","#ffffffff")
	ui.show("layout1", false)
	
	sleep(1000)
	
	while not flag do
		sleep(300)
	end
end

function zuanshi(str)   
sleep(500)   
setDict(0,"s1.txt") 
useDict(0)
local str = ocr(241,585,309,608,"F5D491-101010|837352-101010|E0C285-101010|AF986A-101010|C6AC77-101010|6A5E44-101010",0.90)
if str ~= nil then
print(str)
return str 
end
end

function onClickrun1()
	
	function onClick1()
		
		sleep(200)
		exitScript()
	end
	ui.newLayout("layout1", 650, 600)
	ui.addTextView("layout1","tvId",zuanshi(str))
	ui.setTextSize("tvId",120)
	ui.newRow("layout1","row1")
	ui.addButton("layout1", "close_tuichu", "退出",150, 60)
	ui.setOnClick("close_tuichu", "onClick1()")
	ui.show("layout1", false)

    	sleep(1000)
	while not flag do
		sleep(300)
	end
end

local clicked = false

function onClickrun()
	print("请手动点击屏幕以继续...")
	-- 等待用户点击屏幕
	clicked = true
	ui.dismiss("layout1")
	sleep(200)
	
	if myFindStr() then
		local result = shibiewenzi()
		if result ~= nil then
			for i = 1, result do
				tap_random(280,323,2,300,400)
				tingliu({1200,1600})
				xiajia()
			end
			if shangjiamoney() then
				local should_break = false
				for i = 1, 8 do
					for j = 1, 9 do
						local x = x1 + (j - 1) * grid_width + (grid_width / 2)
						local y = y1 + (i - 1) * grid_height + (grid_height / 2)
						tingliu({500,700})
						tap_random(x, y,1,300,400)      --每个格子点击位置
						tingliu({1500,1800})
						local found = false
						tingliu({300,500})
						for i=1, #jewelry do
							found = process_jewelry(i)
							if found then
								should_break = true
								break
							end
						end
						if not found then
							print("不是我要找的")
							tingliu({1000,1300})
							tap_random(792, 115,5,300,400)
						end
						if found then
							break
						end
					end
					if found or should_break then
						break
					end
				end
			end
		end
        
	end

end

function runUI(flag)
	-- 创建UI布局
	ui.newLayout("layout1", 400, 350)
	ui.addButton("layout1","run_yunxing","运行上架",300,200)
	ui.newRow("layout1","row1")
	ui.addButton("layout1","showzs","显示钻石",200,60)
	ui.setOnClick("run_yunxing", "onClickrun()")
	ui.setOnClick("showzs", "onClickrun1()")
	ui.show("layout1", false)
	
	-- 等待用户点击屏幕
	while not clicked do
		sleep(500)
	end
end

function main()
	runUI(false)
end

main()
